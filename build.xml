<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="." default="compile" name="The fenix-framework Build File">

	<property name="src.dir" location="src" />
	<property name="java.src.dir" location="${src.dir}/java" />
	<property name="antlr.src.dir" location="${src.dir}/antlr" />
	<property name="dml.src.dir" location="${src.dir}/java/dml" />
	<property name="build.dir" location="build" />
	<property name="build.dir.classes" location="${build.dir}/classes" />
	<property name="build.dir.javagen" location="${build.dir}/javaGen" />
	<property name="antlr.gen.package" value="dml" />
	<property name="dist.dir" location="dist" />
	<property name="lib.dir" location="lib" />
	<property name="jar.filename" value="${dist.dir}/fenix-framework" />
	<property name="generator.jar.filename" value="${dist.dir}/fenix-framework-codegenerators" />
	<property name="svntask.dir" location="lib-devel/svntask" />
	<property name="src.gen" location="src_gen" />
	<property name="domain.file" value="fenix-framework.dml" />
	<property name="code.generation.include.pattern" value="pt/ist/fenixframework/pstm/dml/" />

	<path id="class.path.ref">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="prepare" description="Creates necessary directories for the building process">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir.classes}" />
		<mkdir dir="${build.dir.javagen}" />
	</target>

	<target name="clean-all" description="Removes any generated files">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${src.gen}" />
	</target>

	<target name="version">
		<typedef resource="com/googlecode/svntask/svntask.xml">
			<classpath>
				<fileset dir="${svntask.dir}">
					<include name="svnkit.jar" />
					<include name="svntask.jar" />
				</fileset>
			</classpath>
		</typedef>

		<!-- Do an update first to make sure you have the latest version -->
		<!-- svn><update path="." force="true" recursive="true" /></svn -->

		<svn>
			<info path="./" revisionProperty="revisionVersion" />
		</svn>
		<property name="svn.version" value="${revisionVersion}" />
	</target>

	<target name="generateParsers" depends="prepare">
		<mkdir dir="${build.dir.javagen}/${antlr.gen.package}" />
		<antlr target="${antlr.src.dir}/dml.g" fork="true" outputdirectory="${build.dir.javagen}/${antlr.gen.package}">
			<classpath>
				<pathelement path="${lib.dir}/antlr.jar" />
			</classpath>
		</antlr>
		<antlr target="${antlr.src.dir}/dml.tree.g" fork="true" outputdirectory="${build.dir.javagen}/${antlr.gen.package}">
			<classpath>
				<pathelement path="${lib.dir}/antlr.jar" />
			</classpath>
		</antlr>
	</target>

	<target name="compile-dml" depends="generateParsers">
		<javac srcdir="${dml.src.dir}:${build.dir.javagen}" destdir="${build.dir.classes}" extdirs="${lib.dir}" target="1.6" debug="on">
			<classpath refid="class.path.ref" />
		</javac>
	</target>

	<target name="compile-code-generator" depends="compile-dml" description="Compiles the code generator">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${java.src.dir}" includes="${code.generation.include.pattern}" destdir="${build.dir.classes}" extdirs="${lib.dir}" target="1.6" debug="on" />
	</target>

	<target name="compile" depends="generate-domain" description="Compiles the fenix-framework source">
		<javac destdir="${build.dir.classes}" extdirs="${lib.dir}" target="1.6" debug="on" excludes="/dml/**.java">
			<src path="${java.src.dir}" />
			<src path="${src.gen}" />
		</javac>
		<copy todir="${build.dir.classes}">
			<fileset dir="${src.dir}/etc" />
		</copy>
		<copy todir="${build.dir.classes}">
			<fileset dir="${src.dir}/sql" />
		</copy>
		<antcall target="post-compile" />
	</target>

	<target name="post-compile" description="Bytecode Magic to inject constructors">
		<taskdef name="dml-postCompile" classname="pt.ist.fenixframework.pstm.antTasks.PostCompileTask">
			<classpath>
				<fileset dir="${lib.dir}" includes="*.jar" />
				<dirset dir="${build.dir.classes}" />
			</classpath>
		</taskdef>
		<dml-postCompile dir="${build.dir.classes}">
			<fileset dir="${src.dir}/dml">
				<include name="*.dml" />
			</fileset>
			<classpath>
				<fileset dir="lib" includes="*.jar" />
				<dirset dir="${build.dir.classes}" />
			</classpath>
		</dml-postCompile>
	</target>

	<target name="jar" depends="compile,version" description="Generates the jar with the fenix-framework, excluding code generators">
		<copy file="${src.dir}/etc/dml-ant.xml" todir="${build.dir.classes}/pt/ist/fenixframework/" />
		<mkdir dir="${dist.dir}" />
		<jar destfile="${jar.filename}-r${svn.version}.jar" basedir="${build.dir.classes}" />
	</target>

	<target name="generate-domain" depends="compile-code-generator">
		<copy file="${src.dir}/dml/${domain.file}" todir="${build.dir.classes}" />
		<taskdef name="domain-generator" classname="dml.antTasks.DmlCompileTask">
			<classpath>
				<pathelement location="${build.dir.classes}" />
				<fileset dir="${lib.dir}" includes="*.jar" />
			</classpath>
		</taskdef>
		<domain-generator destDirectory="${java.src.dir}" destDirectoryBase="${src.gen}">
			<fileset dir="${src.dir}/dml/">
				<include name="*.dml" />
			</fileset>
		</domain-generator>
	</target>
</project>
